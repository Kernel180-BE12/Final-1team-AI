어떻게 진행할 것인가 .. 
무엇을 하고 싶은가 .. 

개괄적인 아키텍처
1차 : 벡터 스크리닝
2차 : LLM 검수 

내가 왜 RAG를 피하려 하는가?
1. 비용적인 측면. 
모든 검수 요청을 전부 LLM 및 RAG로 처리할 경우 많은 LLM 호출로 인한 비용적 문제가 발생할 가능성이 있다.
2. RAG의 작동 방식과 법(규정)이라는 특수성. 
RAG 중 R의 작동 방식을 생각해보자. R은 사용자의 입력을 임베딩하여, 질문과 가장 유사한 문서(규정)을 찾아온다. 
규정이라는 것은 모든 사항을 지켜야 한다. 질문과 유사한 규정문서만 가져올 경우, 다른 규정을 지키지 못할 가능성이 있다.
이에 대한 보완책으로 멀티쿼리 리트리버를 채용할수 있을 것 같지만.. 과연 멀티 쿼리 리트리버가 상기한 약점을 보완할 수 있을까?

입력은 다음과 같다. 
--- 
[가격 변경 안내]

안녕하세요, #{수신자}님.
요청하신 통신 가격에 변경 사항이 있어 다음과 같이 안내드립니다.

▶ 변경 적용일: #{적용일}
▶ 주요 변경 내용:
#{주요 변경 내용}

#{추가 메시지 - 추가 문의사항은 채널을 통해 접수 부탁드립니다.}

※ 본 메시지는 정책에 따라 가격 변동 알림 요청 고객 한정으로 발송된 메시지입니다.
--- 

이 입력을 기반으로 질문을 생성하고, 규정을 찾아오고, 검사를 할 수 있는가?

3. 애초에 모든 규정을 검사해야 할 필요가 있는가?


4. 누락 문제는 해결이 스크리닝으로 해결이 가능한가?
다중 VDB로 명확한, 그리고 가능한 최대한의 규정들을 검사하겠지만..
필수적으로 들어가야 하는 내용이 누락된 경우는 검출하지 못한다. 
이 문제는 어떻게 해결할 것인가?

사실 다중VDB스크리닝의 사용의 핵심 이유는 비용인데.. 대표님이 비용 문제는 생각하지 말라고 하셨고.. 그럼 이걸 해야할 필요가 있을까..

5. VDB의 운영 난이도는 높다. 지속적인 관리가 성능 향상의 핵심이다. 특히 augmentation을 활용 및 초기 임계값을 휴리스틱하게 잡는 상태에선..
회사가 '지속적인 관리'라는 리스크를 짊어지려 할 것인가?

이외에도 몇 가지 고려사항과 제한사항들이 있어, 벡터DB를 활용한 스크린닝의 도입은 현실적으로 걱정되는 부분이 있다.

그럼에도 불구하고, 한 번 해보고 가는 것과 그냥 가는 것은 차이가 있을 것으로 생각한다.

따라서 빠르게 한번 해 보자.

1. 데이터의 형태는 어떻게?
2. 데이터의 개수는 얼마나?
3. 검증은 어떻게?
3.1 테스트는 어떤 데이터로?
- 명확히 위반하는 데이터로
- 애매한 데이터로
- 통과하는 데이터
4. 메타데이터와 태깅을 활용할 방안은 없는가?
- 유형 
