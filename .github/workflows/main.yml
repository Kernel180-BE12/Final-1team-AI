name: Backend CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ... (Checkout, Login to Docker Hub, Build and push Backend image 단계는 동일) ...
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-backend:latest
          build-args: |
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

      # ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼ 이 부분이 수정됩니다 ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 1. 새 프로젝트 디렉토리로 이동합니다.
            cd /home/jober/Final-1team-AI

            # 2. 서버의 docker-compose.yml에 명시된 이미지 이름 부분을 
            #    최신 이미지를 가리키도록 업데이트합니다. (선택적이지만 권장)
            #    'your-dockerhub-username' 부분을 실제 Docker Hub ID로 바꿔주세요.
            sed -i 's|image: .*|image: ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-backend:latest|g' docker-compose.yml

            # 3. Docker Hub에서 최신 이미지를 받습니다.
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-backend:latest

            # 4. docker-compose를 사용하여 새 버전의 컨테이너를 실행합니다.
            #    .env 파일과 docker-compose.yml을 읽어 백그라운드에서 실행합니다.
            docker-compose up -d