name: AI CI/CD Pipeline (GHCR with SCP)

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Convert repository name to lowercase
        id: repo_name_lowercase
        run: echo "repo_lowercase=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and push to GHCR
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/${{ steps.repo_name_lowercase.outputs.repo_lowercase }}/chatbot-backend:latest

      - name: Copy docker-compose.yml to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/jober/Final-1team-AI"

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cd /home/jober/Final-1team-AI
            sed -i 's|GITHUB_REPOSITORY_PLACEHOLDER|${{ steps.repo_name_lowercase.outputs.repo_lowercase }}|g' docker-compose.yml
            docker pull ghcr.io/${{ steps.repo_name_lowercase.outputs.repo_lowercase }}/chatbot-backend:latest
            # [수정] 최신 Docker 표준인 'docker compose' (하이픈 없음) 명령어로 변경
            docker compose up -d --force-recreate --remove-orphans
            docker image prune -f

      # ▼▼▼▼▼ [추가된 부분] 배포 성공/실패 시 Discord 알림 전송 ▼▼▼▼▼
      - name: Send Discord notification on Success
        if: success()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            **🚀 배포 성공**
            **Repository:** ${{ steps.repo_name_lowercase.outputs.repo_lowercase }}
            **Branch:** ${{ github.ref_name }}
            **Server:** ${{ secrets.SERVER_HOST }}
            **Status:** Success!

      - name: Send Discord notification on Failure
        if: failure()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            **🚨 배포 실패**
            **Repository:** ${{ steps.repo_name_lowercase.outputs.repo_lowercase }}
            **Branch:** ${{ github.ref_name }}
            **Error:** 배포 중 오류가 발생했습니다.
            **Check:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}


