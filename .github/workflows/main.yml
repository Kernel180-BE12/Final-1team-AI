name: AI CI/CD Pipeline (GHCR with SCP)

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GHCR
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/chatbot-backend:latest

      # ▼▼▼ [추가] docker-compose.yml 파일을 서버로 복사하는 단계 ▼▼▼
      - name: Copy docker-compose.yml to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yml" # 프로젝트 루트의 파일을
          target: "/home/jober/Final-1team-AI" # 서버의 이 경로로 복사

      # ▼▼▼ [수정] 배포 스크립트 수정 ▼▼▼
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 1. 서버에서 GHCR에 로그인
            echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # 2. 배포 디렉토리로 이동
            cd /home/jober/Final-1team-AI

            # 3. [수정] 복사된 docker-compose.yml 파일의 이미지 주소를 실제 값으로 변경
            # sed 명령어의 구분자를 '/'에서 '|'로 변경하여 경로 충돌을 방지합니다.
            sed -i 's|${{ GITHUB_REPOSITORY }}|${{ github.repository }}|g' docker-compose.yml
            
            # 4. 최신 이미지를 pull
            docker pull ghcr.io/${{ github.repository }}/chatbot-backend:latest
            
            # 5. docker-compose로 서비스 재시작
            # --force-recreate 옵션은 이미지뿐만 아니라 docker-compose.yml 파일의 변경사항(포트, 볼륨 등)도 강제로 적용시킵니다.
            docker-compose up -d --force-recreate --remove-orphans
            
            # 6. 불필요한 이미지 정리
            docker image prune -f

